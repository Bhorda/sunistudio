{"version":3,"sources":["webpack:///./src/pages/blog.js"],"names":["MarkerHeader","BlogIndex","posts","data","allMarkdownRemark","nodes","title","style","listStyle","map","post","frontmatter","fields","slug","key","className","itemScope","itemType","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"wNA8GA,IAAMA,EAAY,4NAqFHC,UAxDG,SAAC,GAAc,IACzBC,EADwB,EAAXC,KACAC,kBAAkBC,MAgBrC,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,cACX,kBAAIC,MAAO,CAAEC,UAAU,SACpBN,EAAMO,KAAI,SAAAC,GACT,IAAMJ,EAAQI,EAAKC,YAAYL,OAASI,EAAKE,OAAOC,KAEpD,OACE,kBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,uBACEE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAET,0BACE,sBACE,YAAC,OAAD,CAAMC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,oBAAMA,SAAS,YAAW,YAACnB,EAAD,KAAeM,MAG7C,yBAAQI,EAAKC,YAAYS,OAE3B,2BACE,iBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CL,SAAS,yBActB,IAAMM,EAAS","file":"component---src-pages-blog-js-c83c8119f82fede65a53.js","sourcesContent":["// import React from \"react\"\n// import { Link, graphql } from \"gatsby\"\n// import { css } from \"@emotion/core\"\n// import styled from \"@emotion/styled\"\n\n// import Layout from \"../components/layout\"\n// import SEO from \"../components/seo\"\n\n// const Content = styled.div`\n//   margin: 0 auto;\n//   max-width: 860px;\n//   padding: 1.45rem 1.0875rem;\n// `\n\n// const ArticleDate = styled.h5`\n//   display: inline;\n//   color: #606060;\n// `\n\n// const MarkerHeader = styled.h3`\n//   display: inline;\n//   border-radius: 1em 0 1em 0;\n//   background-image: linear-gradient(\n//     -100deg,\n//     rgba(255, 250, 150, 0.15),\n//     rgba(255, 250, 150, 0.8) 100%,\n//     rgba(255, 250, 150, 0.25)\n//   );\n// `\n// const MarkerHeader = styled.h3`\n//   display: inline;\n//   border-radius: 1em 0 1em 0;\n//   background-color: #FCAF38;\n// `\n\n// const ReadingTime = styled.h5`\n//   display: inline;\n//   color: #606060;\n// `\n\n// const IndexPage = ({ data }) => {\n//   return (\n//     <Layout>\n//       <SEO title=\"Blog\" />\n//         {data.allMarkdownRemark.edges\n//           .filter(({ node }) => {\n//             const rawDate = node.frontmatter.rawDate\n//             const date = new Date(rawDate)\n//             return date < new Date()\n//           })\n//           .map(({ node }) => (\n//             <div key={node.id}>\n//               <Link\n//                 to={node.frontmatter.path}\n//                 css={css`\n//                   text-decoration: none;\n//                   color: inherit;\n//                 `}\n//               >\n//                 <MarkerHeader>{node.frontmatter.title}</MarkerHeader>\n//               </Link>\n//               <div>\n//                 <ArticleDate>{node.frontmatter.date}</ArticleDate>\n//               </div>\n//               <p>{node.excerpt}</p>\n//             </div>\n//           ))}\n//     </Layout>\n//   )\n// }\n\n// export default IndexPage\n\n// export const query = graphql`\n//   query {\n//     site {\n//       siteMetadata {\n//         title\n//       }\n//     }\n//     allMarkdownRemark(\n//       sort: { fields: [frontmatter___date], order: DESC }\n//     ) {\n//       totalCount\n//       edges {\n//         node {\n//           id\n//           frontmatter {\n//             title\n//             date(formatString: \"DD MMMM, YYYY\")\n//             rawDate: date\n//             path\n//           }\n//           excerpt\n//         }\n//       }\n//     }\n//   }\n// `\n\n\nimport React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { css } from \"@emotion/core\"\nimport styled from \"@emotion/styled\"\n\n// import Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst MarkerHeader = styled.h3`\n  display: inline;\n  color: #4D4D4D;\n  text-decoration: underline;\n  text-decoration-color: #FCAF38;\n  text-underline-offset: 3px;\n  text-underline-height: 2px;\n  position: relative;  \n`\n  // ::after {\n  //   content: \"\";\n  //   position: absolute;\n  //   width: 100%;\n  //   transform: scaleX(0);\n  //   height: 3px;\n  //   bottom: 0;\n  //   left: 0;\n  //   background-color: #FCAF38;\n  //   // background-color: rgba(0, 0, 0, 0.8);\n  //   transform-origin: bottom right;\n  //   transition: transform 0.4s cubic-bezier(0.86, 0, 0.07, 1);\n  // }\n\n  // :hover::after {\n  //   transform: scaleX(1);\n  //   transform-origin: bottom left;\n  // }\n\n\nconst BlogIndex = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n\n  // if (posts.length === 0) {\n  //   return (\n  //     <Layout location={location}>\n  //       <SEO title=\"All posts\" />\n  //       {/* <Bio /> */}\n  //       <p>\n  //         No blog posts found. Add markdown posts to \"content/blog\" (or the\n  //         directory you specified for the \"gatsby-source-filesystem\" plugin in\n  //         gatsby-config.js).\n  //       </p>\n  //     </Layout>\n  //   )\n  // }\n\n  return (\n    <Layout>\n      <SEO title=\"All posts\" />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\"><MarkerHeader>{title}</MarkerHeader></span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}